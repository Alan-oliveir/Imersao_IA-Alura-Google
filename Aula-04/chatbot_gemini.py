# -*- coding: utf-8 -*-
"""Chatbot_Gemini.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BHglv4fyzE4HjbsOnVqBk2dhijkIIbZB

# Chatbot com o Gemini

Este projeto foi desenvolvido na imersão IA - Alura + Google

## Instalando o SDK do Google
"""

!pip install -q -U google-generativeai

import google.generativeai as genai

# Substituir "API_KEY" por sua API
GOOGLE_API_KEY="API_KEY"
genai.configure(api_key=GOOGLE_API_KEY)

"""## Configurações iniciais

- Listar os modelos disponíveis
"""

for m in genai.list_models():
  if 'generateContent' in m.supported_generation_methods:
    print(m.name)

generation_config = {
  "candidate_count": 1,
  "temperature": 0.5
}

"""- Configuração de conteúdo sensível"""

safety_settings={
    'HATE': 'BLOCK_NONE',
    'HARASSMENT': 'BLOCK_NONE',
    'SEXUAL' : 'BLOCK_NONE',
    'DANGEROUS' : 'BLOCK_NONE'
    }

"""### Inicializando o modelo"""

model = genai.GenerativeModel(model_name='gemini-1.0-pro',
                                  generation_config=generation_config,
                                  safety_settings=safety_settings)

"""## Conversando com o chatbot"""

chat = model.start_chat(history=[])

prompt = input('Esperando prompt: ')

while prompt != "Fim":
  response = chat.send_message(prompt)
  print("Resposta:", response.text, '\n')
  prompt = input('Esperando prompt: ')

"""### Melhorando a visualização do histórico

- Código disponível em: https://ai.google.dev/tutorials/python_quickstart#import_packages
"""

import textwrap
from IPython.display import display
from IPython.display import Markdown

def to_markdown(text):
  text = text.replace('•', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

#Imprimindo o histórico
for message in chat.history:
  display(to_markdown(f'**{message.role}**: {message.parts[0].text}'))
  print('-------------------------------------------')